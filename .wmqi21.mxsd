<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
   
   
    <xsd:annotation> 
        <xsd:documentation> 
        	WMQI 2.1 permits a complex type to include a simple type without defining 
        	an element or inheriting from a simple type. Both of these scenarios are
        	not supported by XML Schema specifications.
        	
        	As a result you can have the following XML stream 
        	
        	<Fred>xxxx<Joe/>yyyy<Jim/>zzzz</Fred>
        	  
        	  where xxxx is the base simple type and yyyy and zzzz are the anonymous child simple types.
        	 
        	
        	To alleviate this migration problem from WMQI 2.1 to 5.0 , the following custom 
        	types are provided by IBM. The user has to take special care in using these types
        	and must adhere to the following rules
        	
        	        	
        	-- Types starting with name ComIbmMrmBaseValuexxxx are to be used in the scenario where
        	   a complex type extends a simple type
        	   
        	-- Types starting with name ComIbmMrmAnonxxx are to be used in the scenario where
        	   a complex type includes a simple type
        	   
        	-- User defined complex types containing elements of these types must have  : 
        	   		        		            		            		            		 
        		 -- mixedContext flag on the complex type must be set to true. As per XML Schema
        		    specifications, mixedContent flag on the complex type indicates that its
        		    instance can have arbitrary strings in between the elements. 
        		   
        		 -- The elements of these types always have minOccurs and maxOccurs set to 0.
        		    As per the XML Schema specification, if both of these flags are set to 0 
        		    then the XML instance of the complex type cannot have any occurrences of
        		    these elements. In other words, such elements are dummy elements and logically
        		    they are not part of the complex type. 
        		    
        		 -- For the embedded simple types, the min/maxOccurs as defined in the 
        		    WMQI 2.1 model appear as annotations on these elements. 
        		    
        		 -- For the base simple types , there is no need to have min/maxOccurs annotations 
        		    on the element because they are always mandatory.   
        		    
       		      
        		  By combining these constructs,  we are creating a special case for
        		  the dictionary extractor to treat these dummy elements as just the simple
        		  types and for the MRM parser to parse the arbitrary strings in the instance
        		  (by product of mixedContext declaration) according to the defined type of
        		  the element. 
        		  
        		  Since the declaration of these dummy elements (in the complex type is positional,
        		  MRM parser can ensure that such arbitrary strings in the XML instance adhere to
        		  the relative position of the declaration of these dummy elements in the complex type.  
        		         		  
        		  The XML instance generated for the complex type (containing these dummy elements) 
        		  will be parsed successfully by any XML Schema compliant parser because it will
        		  contain arbitrary strings at the position where the dummy elements are defined; 
        		  this is OK because the mixContext flag on the complex type is set to true.  
        
        </xsd:documentation>
    </xsd:annotation>


	<xsd:annotation>
        <xsd:documentation> 
        	 ComIbmMrm_BaseValuexxx type to be used when a complex type extends a simple type
        </xsd:documentation>
    </xsd:annotation>

	<xsd:simpleType name="ComIbmMrm_BaseValueString">
        <xsd:restriction base="xsd:string"></xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ComIbmMrm_BaseValueInt">
        <xsd:restriction base="xsd:int"></xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ComIbmMrm_BaseValueDateTime">
        <xsd:restriction base="xsd:dateTime"></xsd:restriction>
    </xsd:simpleType>

  	<xsd:simpleType name="ComIbmMrm_BaseValueDate">
        <xsd:restriction base="xsd:date"></xsd:restriction>
    </xsd:simpleType>

	<xsd:simpleType name="ComIbmMrm_BaseValueTime">
        <xsd:restriction base="xsd:time"></xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ComIbmMrm_BaseValueFloat">
        <xsd:restriction base="xsd:float"></xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ComIbmMrm_BaseValueDecimal">
        <xsd:restriction base="xsd:decimal"></xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="ComIbmMrm_BaseValueBoolean">
        <xsd:restriction base="xsd:boolean"></xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="ComIbmMrm_BaseValueBinary">
        <xsd:restriction base="xsd:hexBinary"></xsd:restriction>
    </xsd:simpleType>        

	<xsd:simpleType name="ComIbmMrm_BaseValueGYear">
        <xsd:restriction base="xsd:gYear"></xsd:restriction>
    </xsd:simpleType>

	<xsd:simpleType name="ComIbmMrm_BaseValueGYearMonth">
        <xsd:restriction base="xsd:gYearMonth"></xsd:restriction>
    </xsd:simpleType>

	<xsd:simpleType name="ComIbmMrm_BaseValueGMonth">
        <xsd:restriction base="xsd:gMonth"></xsd:restriction>
    </xsd:simpleType>

	<xsd:simpleType name="ComIbmMrm_BaseValueGMonthDay">
        <xsd:restriction base="xsd:gMonthDay"></xsd:restriction>
    </xsd:simpleType>

	<xsd:simpleType name="ComIbmMrm_BaseValueGDay">
        <xsd:restriction base="xsd:gDay"></xsd:restriction>
    </xsd:simpleType>

   <xsd:annotation>
        <xsd:documentation> 
        	 ComIbmMrm_Anonymous_xxx  type to be used when a complex type includes a simple type 
        </xsd:documentation>
    </xsd:annotation>
   
     <xsd:simpleType name="ComIbmMrm_AnonString">
        <xsd:restriction base="xsd:string"></xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ComIbmMrm_AnonInt">
        <xsd:restriction base="xsd:int"></xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ComIbmMrm_AnonDateTime">
        <xsd:restriction base="xsd:dateTime"></xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ComIbmMrm_AnonFloat">
        <xsd:restriction base="xsd:float"></xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ComIbmMrm_AnonDecimal">
        <xsd:restriction base="xsd:decimal"></xsd:restriction>
    </xsd:simpleType> 
    
    <xsd:simpleType name="ComIbmMrm_AnonBoolean">
        <xsd:restriction base="xsd:boolean"></xsd:restriction>
    </xsd:simpleType> 
    
    <xsd:simpleType name="ComIbmMrm_AnonBinary">
        <xsd:restriction base="xsd:hexBinary"></xsd:restriction>
    </xsd:simpleType>         
</xsd:schema>